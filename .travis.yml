# Copyright (c) 2017-2020 Petr Vorel <pvorel@suse.cz>

dist: bionic
sudo: required
language: c
services:
    - docker

matrix:
    include:
        # 32 bit build
        - os: linux
          env: DISTRO=debian:stable VARIANT=i386 TREE=out MAKE_INSTALL=1
          compiler: gcc

        # cross compilation builds
        - os: linux
          env: DISTRO=debian:stable VARIANT=cross-compile ARCH=ppc64el TREE=out MAKE_INSTALL=1
          compiler: powerpc64le-linux-gnu-gcc

        - os: linux
          env: DISTRO=debian:stable VARIANT=cross-compile ARCH=arm64 TREE=out MAKE_INSTALL=1
          compiler: aarch64-linux-gnu-gcc

        - os: linux
          env: DISTRO=debian:stable VARIANT=cross-compile ARCH=s390x TREE=out MAKE_INSTALL=1
          compiler: s390x-linux-gnu-gcc

        # musl (native)
        - os: linux
          # Message: WARNING: xsltproc: cannot process http://docbook.sourceforge.net/release/xsl-ns/current/manpages/docbook.xsl
          # doc/meson.build:70:1: ERROR: Problem encountered: Docs cannot be built: xsltproc does not work correctly
          env: DISTRO=alpine:latest TREE=out MAKE_INSTALL=1
          compiler: gcc

        # build with minimal dependencies
        - os: linux
          env: DISTRO=debian:stable VARIANT=minimal TREE=out MAKE_INSTALL=1
          compiler: clang

        # other builds
        - os: linux
          env: DISTRO=fedora:rawhide TREE=out MAKE_INSTALL=1
          compiler: clang

        - os: linux
          env: DISTRO=centos:6 TREE=out MAKE_INSTALL=1
          compiler: gcc

        - os: linux
          env: DISTRO=centos:7 TREE=out MAKE_INSTALL=1
          compiler: gcc

        - os: linux
          env: DISTRO=debian:testing TREE=out MAKE_INSTALL=1
          compiler: gcc

        - os: linux
          env: DISTRO=debian:oldstable TREE=out MAKE_INSTALL=1
          compiler: clang

        - os: linux
          env: DISTRO=opensuse/tumbleweed TREE=out MAKE_INSTALL=1
          compiler: gcc

        - os: linux
          env: DISTRO=opensuse/leap TREE=out MAKE_INSTALL=1
          compiler: gcc

        - os: linux
          env: DISTRO=debian:oldstable TREE=out MAKE_INSTALL=1
          compiler: gcc

        - os: linux
          env: DISTRO=debian:testing TREE=out MAKE_INSTALL=1
          compiler: clang

        - os: linux
          env: DISTRO=ubuntu:eoan TREE=out MAKE_INSTALL=1
          compiler: gcc

        - os: linux
          env: DISTRO=ubuntu:xenial TREE=out MAKE_INSTALL=1
          compiler: gcc

        - os: linux
          env: DISTRO=centos:latest TREE=out MAKE_INSTALL=1
          compiler: gcc

before_install:
    - df -hT
    - DIR="/usr/src/ltp"
    - printf "FROM $DISTRO\nRUN mkdir -p $DIR\nWORKDIR $DIR\nCOPY . $DIR\n" > Dockerfile
    - cat Dockerfile
    - docker build -t ltp .

script:
    - INSTALL="${DISTRO%%:*}"
    - INSTALL="${INSTALL%%/*}"
    - if [ "$MAKE_INSTALL" = 1 ]; then INSTALL_OPT="-i"; fi
    - if [ ! "$TREE" ]; then TREE="in"; fi
    - case $VARIANT in cross-compile*) BUILD="cross";; i386) BUILD="32";; *) BUILD="native";; esac
    - docker run -t ltp /bin/sh -c "cd travis && ./$INSTALL.sh && if [ \"$VARIANT\" ]; then ARCH=\"$ARCH\" ./$INSTALL.$VARIANT.sh; fi && ../build.sh -o $TREE -t $BUILD -c $CC $INSTALL_OPT"
