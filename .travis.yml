sudo: required
language: c
services:
    - docker

matrix:
    include:
        # 32 bit build
        - os: linux
          env: DISTRO=debian.i386 BUILD="32"
          compiler: gcc

        # cross compilation builds
        - os: linux
          env: DISTRO=debian.cross-compile.ppc64le TREE="out" BUILD="cross"
          compiler: powerpc64le-linux-gnu-gcc
        - os: linux
          env: DISTRO=debian.cross-compile.aarch64 TREE="out" BUILD="cross"
          compiler: aarch64-linux-gnu-gcc

        # build with minimal dependencies
        - os: linux
          env: DISTRO=debian.minimal TREE="out"
          compiler: clang

        - os: linux
          env: DISTRO=debian.testing
          compiler: gcc
        - os: linux
          env: DISTRO=debian.testing
          compiler: clang

        - os: linux
          env: DISTRO=debian.oldstable
          compiler: gcc
        - os: linux
          env: DISTRO=debian.oldstable
          compiler: clang

        - os: linux
          env: DISTRO=ubuntu.latest TREE="out"
          compiler: gcc

        - os: linux
          env: DISTRO=ubuntu.xenial
          compiler: gcc

        - os: linux
          env: DISTRO=tumbleweed
          compiler: gcc

        - os: linux
          env: DISTRO=leap
          compiler: gcc

        - os: linux
          env: DISTRO=fedora.latest
          compiler: clang

        - os: linux
          env: DISTRO=centos.latest
          compiler: gcc
        - os: linux
          env: DISTRO=centos6 TREE="out"
          compiler: gcc

before_install:
    - docker build -f travis/Dockerfile.$DISTRO -t ltp .

script:
    - if [ ! "$TREE" ]; then TREE="in"; fi
    - if [ ! "$BUILD" ]; then BUILD="native"; fi
    - docker run -it ltp /bin/sh -c "cd travis && ./travis.$DISTRO.sh && ../build.sh -o $TREE -t $BUILD -c $CC"
