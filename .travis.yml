# Copyright (c) 2017-2021 Petr Vorel <pvorel@suse.cz>

dist: focal
sudo: required
language: c
services:
    - docker

matrix:
    include:
        # 32 bit build
        - os: linux
          env: DISTRO=debian:stable VARIANT=i386
          compiler: gcc

        # cross compilation builds
        - os: linux
          env: DISTRO=debian:stable VARIANT=cross-compile ARCH=ppc64el TREE=out MAKE_INSTALL=1
          compiler: powerpc64le-linux-gnu-gcc

        - os: linux
          env: DISTRO=debian:stable VARIANT=cross-compile ARCH=arm64 TREE=out
          compiler: aarch64-linux-gnu-gcc

        - os: linux
          env: DISTRO=debian:stable VARIANT=cross-compile ARCH=s390x TREE=out
          compiler: s390x-linux-gnu-gcc

        # musl (native)
        - os: linux
          # Message: WARNING: xsltproc: cannot process http://docbook.sourceforge.net/release/xsl-ns/current/manpages/docbook.xsl
          # doc/meson.build:70:1: ERROR: Problem encountered: Docs cannot be built: xsltproc does not work correctly
          env: DISTRO=alpine:latest
          compiler: gcc

        # build with minimal dependencies
        - os: linux
          env: DISTRO=debian:stable VARIANT=minimal TREE=out
          compiler: clang

        # other builds
        - os: linux
          env: DISTRO=opensuse/tumbleweed
          compiler: gcc

        - os: linux
          env: DISTRO=fedora:latest MAKE_INSTALL=1
          compiler: clang

        - os: linux
          env: DISTRO=centos:7 TREE=out
          compiler: gcc

        - os: linux
          env: DISTRO=debian:testing
          compiler: gcc

        - os: linux
          env: DISTRO=debian:oldstable
          compiler: clang

        - os: linux
          env: DISTRO=opensuse/leap
          compiler: gcc

        - os: linux
          env: DISTRO=debian:oldstable
          compiler: gcc

        - os: linux
          env: DISTRO=debian:testing
          compiler: clang

        - os: linux
          env: DISTRO=ubuntu:groovy TREE=out
          compiler: gcc

        - os: linux
          env: DISTRO=ubuntu:xenial
          compiler: gcc

        - os: linux
          env: DISTRO=centos:latest
          compiler: gcc

script:
    - INSTALL="${DISTRO%%:*}"
    - INSTALL="${INSTALL%%/*}"
    - if [ "$MAKE_INSTALL" = 1 ]; then INSTALL_OPT="-i"; fi
    - if [ ! "$TREE" ]; then TREE="in"; fi
    - case $VARIANT in cross-compile*) BUILD="cross";; i386) BUILD="32";; *) BUILD="native";; esac

    # podman
    - . /etc/os-release
    - echo "deb [arch=$(dpkg --print-architecture)] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/testing/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:testing.list
    - curl -fsSL https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/testing/xUbuntu_${VERSION_ID}/Release.key | sudo apt-key add -
    - sudo apt-get update
    - sudo apt-get -y install podman crun uidmap
    - sudo mkdir -p /etc/containers
    - printf "[registries.search]\nregistries = [\"docker.io\"]\n" | sudo tee /etc/containers/registries.conf

    # ltp
    - DIR="/usr/src/ltp"
    - printf "FROM $DISTRO\nRUN mkdir -p $DIR\nWORKDIR $DIR\nCOPY . $DIR\n" > Dockerfile
    - cat Dockerfile
    - sudo podman build --security-opt seccomp:unconfined -t ltp .
    - sudo podman run -t ltp /bin/sh -c "cd travis && ./$INSTALL.sh && if [ \"$VARIANT\" ]; then ARCH=\"$ARCH\" ./$INSTALL.$VARIANT.sh; fi && ../build.sh -o $TREE -t $BUILD -c $CC $INSTALL_OPT"
